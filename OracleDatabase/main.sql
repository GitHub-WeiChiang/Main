SELECT 
    DECODE(grouping(department_name), 1, '全體部門', department_name),
    DECODE(grouping(job_id), 1, '所有職務', job_id),
    COUNT(*),
    TO_CHAR(avg(salary), '999,999')
FROM employees e, departments d
WHERE 
    d.department_id = e.department_id
    AND
    d.department_id in (20, 30)
GROUP BY ROLLUP (department_name, job_id)
ORDER BY 1, 2;

SELECT
    decode(
        GROUPING(department_id),
        1, '全體部門合計',
        0, department_id
    ),
    to_char(SUM(salary), '999,999')
FROM employees
GROUP BY ROLLUP(department_id)
ORDER BY department_id;

SELECT department_id, job_id, manager_id, SUM(salary)
FROM employees
WHERE department_id in (20, 30) 
GROUP BY GROUPING SETS(
    (department_id, job_id),
    (job_id, manager_id)
)
ORDER BY department_id, manager_id, job_id;

SELECT department_id, job_id, SUM(salary)
FROM employees
WHERE department_id in(20, 30)
GROUP BY CUBE(department_id, job_id)
ORDER BY department_id;

SELECT department_id, SUM(salary)
FROM employees
GROUP BY CUBE(department_id)
ORDER BY department_id;

SELECT department_id, job_id, SUM(salary)
FROM employees
GROUP BY ROLLUP(department_id, job_id)
ORDER BY department_id, job_id;

SELECT department_id, SUM(salary)
FROM employees
GROUP BY ROLLUP(department_id)
ORDER BY department_id;

SELECT
    department_id,
    TO_CHAR(MAX(salary), '99,999'),
    TO_CHAR(MIN(salary), '99,999'),
    TO_CHAR(AVG(salary), '99,999.9'),
    TO_CHAR(MEDIAN(salary), '99,999.9'),
    TO_CHAR(STDDEV(salary), '99,999.9'),
    TO_CHAR(VARIANCE(salary), '999,999,999.9')
FROM employees
GROUP BY department_id;

SELECT
    employee_id,
    department_id,
    hire_date,
    FIRST_VALUE(hire_date) OVER (
        PARTITION BY department_id
        ORDER BY hire_date
    ),
    hire_date - FIRST_VALUE(hire_date) OVER (
        PARTITION BY department_id
        ORDER BY hire_date
    )
FROM employees
WHERE department_id IN (20, 30)
ORDER BY 2, 5;

SELECT
    department_id,
    employee_id,
    salary,
    LEAD(salary, 1, 0) OVER (
        PARTITION BY department_id
        ORDER BY salary
        DESC NULLS LAST
    ),
    LAG(salary, 1, 0) OVER (
        PARTITION BY department_id
        ORDER BY salary
        DESC NULLS LAST
    )
FROM employees
WHERE department_id IN (20, 30)
ORDER BY 1, 3 DESC;

SELECT
    employee_id,
    department_id,
    salary,
    RANK() OVER (
        PARTITION BY department_id
        ORDER BY salary DESC NULLS LAST
    ) RANK,
    DENSE_RANK() OVER (
        PARTITION BY department_id
        ORDER BY salary DESC NULLS LAST
    ) DENSE_RANK
FROM employees
WHERE department_id in(30,50)
ORDER BY 2, RANK;

SELECT
    DEPARTMENT_ID,
    EMPLOYEE_ID,
    TO_CHAR(HIRE_DATE, 'yyyy-mm-dd'),
    ROW_NUMBER() OVER (
        PARTITION BY DEPARTMENT_ID
        ORDER BY HIRE_DATE
    )
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (20, 30)
ORDER BY 1, 3;

SELECT DEPARTMENT_ID, EMPLOYEE_ID, COUNT(*) OVER (PARTITION BY DEPARTMENT_ID)
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (20, 30);

SELECT DEPARTMENT_ID, COUNT(*) OVER ()
FROM DEPARTMENTS;

SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID > 30
GROUP BY DEPARTMENT_ID, JOB_ID
ORDER BY DEPARTMENT_ID;

SELECT SUM(SALARY)
FROM EMPLOYEES;

SELECT MIN(HIRE_DATE)
FROM EMPLOYEES;

SELECT MAX(SALARY)
FROM EMPLOYEES;

SELECT COUNT(DISTINCT COMMISSION_PCT)
FROM EMPLOYEES;

SELECT COUNT(COMMISSION_PCT)
FROM EMPLOYEES;

SELECT COUNT(*)
FROM EMPLOYEES;

SELECT ROUND(AVG(DISTINCT SALARY))
FROM EMPLOYEES;

SELECT ROUND(AVG(SALARY))
FROM EMPLOYEES;

SELECT DEPARTMENT_ID, ROUND(AVG(SALARY), 1)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
ORDER BY AVG(SALARY) DESC;

SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.LOCATION_ID, L.CITY
FROM DEPARTMENTS D
RIGHT OUTER JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID;

SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
RIGHT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
LEFT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.FIRST_NAME||' ' ||E.LAST_NAME, M.FIRST_NAME||' '||M.LAST_NAME
FROM EMPLOYEES E JOIN EMPLOYEES M
ON (E.MANAGER_ID = M.EMPLOYEE_ID);

SELECT EMPLOYEE_ID, LAST_NAME, D.DEPARTMENT_NAME, L.CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D USING (DEPARTMENT_ID)
JOIN LOCATIONS L USING (LOCATION_ID)

SELECT E.EMPLOYEE_ID, E.LAST_NAME, DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D USING(DEPARTMENT_ID);

SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES
NATURAL JOIN DEPARTMENTS;

SELECT TO_DSINTERVAL('31 23:59:59.1234')
FROM DUAL;

SELECT TO_YMINTERVAL('2-3')
FROM DUAL;

SELECT TO_TIMESTAMP_TZ('2021-04-14 11:25:10', 'YYYY-MM-DD HH24:MI:SS')
FROM DUAL;

SELECT TO_TIMESTAMP('2021-04-14 11:25:10:1234', 'YYYY-MM-DD HH24:MI:SS:FF')
FROM DUAL;

SELECT 
    EMPLOYEE_ID,
    LAST_NAME,
    JOB_ID,
    SALARY,
    DECODE(
        JOB_ID,
        'SAL_REP', SALARY * 1.2,
        'IT_PROG', SALARY * 1.15,
        'ST_CLERK', SALARY * 1.1,
        SALARY * 1.05
    )
FROM EMPLOYEES;

SELECT
    EMPLOYEE_ID,
    LAST_NAME,
    JOB_ID,
    SALARY,
    CASE JOB_ID 
        WHEN 'SAL_REP' THEN SALARY * 1.2
        WHEN 'SAL_REP' THEN SALARY * 1.2
        WHEN 'IT_PROG' THEN SALARY * 1.15
        WHEN 'ST_CLERK' THEN SALARY * 1.1
        ELSE SALARY * 1.05
    END
FROM EMPLOYEES;

SELECT
    LAST_NAME,
    EMPLOYEE_ID,
    COALESCE(TO_CHAR(COMMISSION_PCT), TO_CHAR(MANAGER_ID))
FROM EMPLOYEES;

SELECT
    FIRST_NAME,
    LENGTH(FIRST_NAME),
    LAST_NAME, LENGTH(LAST_NAME),
    NULLIF(LENGTH(FIRST_NAME), LENGTH(LAST_NAME))
FROM EMPLOYEES;

SELECT
    LAST_NAME,
    SALARY,
    COMMISSION_PCT,
    SALARY * (1 + NVL2(COMMISSION_PCT, COMMISSION_PCT, 0)) * 12
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (50, 80);

SELECT
    LAST_NAME,
    SALARY,
    NVL(COMMISSION_PCT, 0),
    SALARY * (1 + NVL(COMMISSION_PCT, 0)) * 12
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, LAST_NAME, TO_CHAR(SALARY, '$99,999')
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, NEXT_DAY(ADD_MONTHS(HIRE_DATE, 6), 2)
FROM EMPLOYEES;

SELECT SYSDATE + 12 / 24
FROM DUAL;

SELECT FIRST_NAME, SYSDATE - HIRE_DATE
FROM EMPLOYEES;

SELECT SYSDATE - 3
FROM DUAL;

SELECT SYSDATE + 7
FROM DUAL;

SELECT LAST_DAY('20-SEP-22')
FROM DUAL;

SELECT NEXT_DAY('27-JUL-14', 'SUNDAY')
FROM DUAL;

SELECT NEXT_DAY('27-JUL-14', 1)
FROM DUAL;

SELECT ADD_MONTHS('31-DEC-13', 10)
FROM DUAL;

SELECT NUMTODSINTERVAL(25, 'HOUR'),
NUMTODSINTERVAL(25.4, 'HOUR'),
NUMTODSINTERVAL(25.9, 'HOUR')
FROM DUAL;

SELECT NUMTOYMINTERVAL(11, 'MONTH'),
NUMTOYMINTERVAL(11.4, 'MONTH'),
NUMTOYMINTERVAL(11.5, 'MONTH')
FROM DUAL;

SELECT MONTHS_BETWEEN('31-OCT-14', '31-DEC-13')
FROM DUAL;

SELECT SYSDATE
FROM DUAL;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID
FROM EMPLOYEES
WHERE SOUNDEX(FIRST_NAME) = SOUNDEX('DEN');

SELECT REPLACE('JACK AND JUE', 'J', 'BL')
FROM DUAL;

SELECT TRIM(LEADING 'H' FROM 'HOW ARE YOU DOING ?')
FROM DUAL;

SELECT RPAD(123.456, 10, '*')
FROM DUAL;

SELECT LPAD(123.456, 10, '*')
FROM DUAL;

SELECT INSTR('HELLO', 'E', 1)
FROM DUAL;

SELECT LENGTH('HELLO')
FROM DUAL;

SELECT SUBSTR('HELLO, HOW ARE YOU DOING ?', 1, 5)
FROM DUAL;

SELECT CONCAT('HELLO', 'HOW ARE YOU?')
FROM DUAL;

SELECT INITCAP ('hello')
FROM DUAL;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE UPPER(LAST_NAME) = 'ROGERS';

SELECT UPPER('hello')
FROM DUAL;

SELECT LOWER('HELLO')
FROM DUAL;

SELECT REMAINDER(11, 3)
FROM DUAL;

SELECT MOD(11, 3)
FROM DUAL;

SELECT FLOOR(2.2345)
FROM DUAL;

SELECT CEIL(2.2345)
FROM DUAL;

SELECT TRUNC(12.345, 2)
FROM DUAL;

SELECT ROUND(12.345, 2)
FROM DUAL;

SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES;

SELECT employee_id
FROM EMPLOYEES
ORDER BY SALARY DESC
FETCH NEXT 1 PERCENT ROWS ONLY;

SELECT EMPLOYEE_ID
FROM EMPLOYEES
ORDER BY SALARY DESC
FETCH FIRST 3 ROWS ONLY;

SELECT *
FROM (
    SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_ID, (SYSDATE - HIRE_DATE) / 365
    FROM EMPLOYEES
    ORDER BY 4 DESC
)
WHERE ROWNUM <= 6;

SELECT FIRST_NAME, DEPARTMENT_ID, SALARY
FROM EMPLOYEES
ORDER BY DEPARTMENT_ID, FIRST_NAME, SALARY DESC;

SELECT LAST_NAME, SALARY, HIRE_DATE
FROM EMPLOYEES
WHERE SALARY >= 3000
ORDER BY 2, 3 DESC;

SELECT DEPARTMENT_ID, EMPLOYEE_ID, LAST_NAME, FIRST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE JOB_ID LIKE '%MAN'
    AND DEPARTMENT_ID = &DEPARTMENT_ID
    AND SALARY > &SALARY;

SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID
FROM EMPLOYEES
WHERE JOB_ID LIKE '%SA\_%' ESCAPE '\';

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, JOB_ID
FROM EMPLOYEES
WHERE (JOB_ID LIKE '%MAN' OR JOB_ID LIKE '%CLERK')
    AND DEPARTMENT_ID = 30
    AND SALARY > 3000;

SELECT FIRST_NAME, LAST_NAME, MANAGER_ID, DEPARTMENT_ID, HIRE_DATE
FROM EMPLOYEES
WHERE MANAGER_ID IN (101, 104) AND DEPARTMENT_ID IN (100, 110);

SELECT FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID, HIRE_DATE
FROM EMPLOYEES
WHERE SALARY BETWEEN 11000 AND 12000;

SELECT FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID, HIRE_DATE
FROM EMPLOYEES
WHERE SALARY >= 24000;

SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID
FROM EMPLOYEES
WHERE HIRE_DATE = '17-JUN-03';

SELECT 'JOHN IS''NT WORK IN THE DEPARTMENT'
FROM DUAL;

SELECT FIRST_NAME, SALARY, SALARY * 12 + SALARY * 12 * 0.05
FROM EMPLOYEES;

SELECT LAST_NAME, DEPARTMENT_ID, (SALARY + 50) * 12
FROM EMPLOYEES
WHERE MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 12 >= 5;

SELECT LAST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES
NATURAL JOIN DEPARTMENTS;

SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 100;

SELECT EMPLOYEE_ID, LAST_NAME, SALARY
FROM EMPLOYEES;

SELECT FIRST_NAME, LAST_NAME, HIRE_DATE, SALARY
FROM EMPLOYEES;

ALTER SESSION SET NLS_LANGUAGE = AMERICAN;
